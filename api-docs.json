{
    "info": {
        "title": "SMTP2Go API",
        "version": "3.0.0",
        "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h1>SMTP2GO API Documentation</h1>\n\n\t<h3>API Information</h3>\n\n\t<p>\n\t\tThe SMTP2GO API's base URL is <strong>https&#58;//api.smtp2go.com/v3/</strong><br />\n\t\tAny API URLs will always be relative to this URL.\n\t</p>\n\n\t<p>\n\t\tFor example, an API call to <strong>/stats/email_summary</strong> will be reachable at <strong>https&#58;//api.smtp2go.com/v3/stats/email_summary</strong>\n\t</p>\n\n\t<h3>Technical Details</h3>\n\n\t<p>\n\t\tThe API has the following characteristics:\n\t</p>\n\n\t<ul>\n\t\t<li>All API Calls must be made with an <strong>HTTP POST</strong> request.</li>\n\t\t<li>All <strong>input to</strong> and <strong>output from</strong> the API is made using JSON objects.</li>\n\t\t<li>All input payloads <strong>MUST</strong> contain the <strong>'api_key'</strong> field.</li>\n\t\t<li>All calls return a <strong>JSON</strong> payload consisting of a result string and any data that was returned.</li>\n\t\t<li>Any <strong>200 OK</strong> responses indicate a successful call. Error responses for each call are listed in the documentation.</li>\n\t</ul>\n\n\t<h3>Rate limiting</h3>\n\n\t<p>\n\t\tUnless otherwise specified, each endpoint has a limit of 360 requests per hour. Rate limiting headers are exhibited using the following HTTP response headers:\n\t</p>\n\n\t<ul>\n\t\t<li><strong>X-RateLimit-Limit</strong> - The request limit for this endpoint.</li>\n\t\t<li><strong>X-RateLimit-Remaining</strong> - Remaining requests before the limit is reached.</li>\n\t\t<li><strong>X-RateLimit-Reset</strong> - Seconds before the remaining count is reset.</li>\n\t</ul>\n\n</div>"
    },
    "produces": [
        "application/json"
    ],
    "basePath": "/v3",
    "tags": [
        {
            "name": "Statistics",
            "description": "<h4>Retrieve different statistical reports for your account.</h4>"
        },
        {
            "name": "Emails",
            "description": "<h4>Send an email, or retrieve details of past emails that have been sent.</h4>\n\n<p>\n\tThere are two ways to send emails through the API:\n</p>\n<p><strong>/email/send</strong> (this is the preferred method)</p>\n<p>\n\tYou pass us all of the components of an email you would like sent, such as the sender and recipient. We then create the email and send it.\n</p>\n<p><strong>/email/mime</strong></p>\n<p>\n\tYou create a MIME string yourself, using a MIME library in your programming language, and send us the string.\n</p>"
        },
        {
            "name": "Email Blocklist",
            "description": "<h4>Manage the list of email addresses that are automatically blocked from receiving emails.</h4>\n<p>\n\tThis list contains past hard bounces, spam complaints, unsubscribes, and any email addresses that \n\thave been manually added that you wish to ensure don't have emails sent to them.\n</p>"
        },
        {
            "name": "SMTP Users",
            "description": "<h4>Manage the SMTP users in your account.</h4>"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "host": "api.smtp2go.com",
    "swagger": "2.0",
    "paths": {
        "/stats/email_bounces": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Report on email bounce statistics</h4>\n\t<p>Rate limited to 1 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n  \"request_id\": \"2917fc07-d685-4fea-b49a-14087058461f\",\n  \"data\": {\n    \"emails\": 159,\n    \"rejects\": 0,\n    \"softbounces\": 0,\n    \"hardbounces\": 0,\n    \"bounce_percent\": \"0.00\"\n  }\n}</pre>\n\t\n</div>",
                "tags": [
                    "Statistics"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "emails": {
                                            "description": "The total number of emails send during the last 30 day period",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "rejects": {
                                            "description": "How many of those emails sent were rejected",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "softbounces": {
                                            "description": "How many of those rejects were softbounces",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "hardbounces": {
                                            "description": "How many of those emails were hardbounces",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "bounce_percent": {
                                            "description": "Percentage of emails sent that were bounced",
                                            "default": "0.0",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "hardbounces": 0,
                                    "bounce_percent": "0.00",
                                    "rejects": 0,
                                    "emails": 159,
                                    "softbounces": 0
                                },
                                "request_id": "2917fc07-d685-4fea-b49a-14087058461f"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/stats/email_cycle": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>\n\t\tRetrieve a summary showing the start date and end date of your monthly cycle, the number of \n\t\temails sent this monthly cycle, number of emails remaining and the total number of emails in \n\t\tyour plan's monthly allowance.\n\t</h4>\n\t<p>Rate limited to 1 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n  \"request_id\": \"4b84c952-9bca-432f-a68e-585e4c7a969c\",\n  \"data\": {\n    \"cycle_end\": \"2016-08-04 01:49:15.863998\",\n    \"cycle_start\": \"2016-08-01 01:49:15.863998\",\n    \"cycle_used\": 0,\n    \"cycle_remaining\": 1000,\n    \"cycle_max\": 1000\n  }\n}</pre>\n\n</div>",
                "tags": [
                    "Statistics"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "cycle_start": {
                                            "description": "An ISO-8601 formatted datetime containing the start of the monthly cycle.",
                                            "type": "string"
                                        },
                                        "cycle_end": {
                                            "description": "An ISO-8601 formatted datetime containing the end of the monthly cycle.",
                                            "type": "string"
                                        },
                                        "cycle_used": {
                                            "description": "Number of emails that have been sent during this monthly cycle.",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "cycle_remaining": {
                                            "description": "The remaining email quota in this monthly cycle.",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "cycle_max": {
                                            "description": "The total number of emails that can be sent during this monthly cycle.",
                                            "default": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "cycle_start": "2016-08-01 01:49:15.863998",
                                    "cycle_used": 0,
                                    "cycle_max": 1000,
                                    "cycle_remaining": 1000,
                                    "cycle_end": "2016-08-04 01:49:15.863998"
                                },
                                "request_id": "4b84c952-9bca-432f-a68e-585e4c7a969c"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/stats/email_history": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Retrieve a summary showing account activity from a specified date range (defaults to the last 30 days), per sender email address or SMTP username.</h4>\n\t<p>Rate limited to 1 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n  \"request_id\": \"f3898083-f5d5-4512-86bd-e02bd1685840\",\n  \"data\": {\n    \"count\": 159,\n    \"history\": [\n      {\n        \"used\": 123,\n        \"bytecount\": 148113,\n        \"avgsize\": 1204.1707317073171,\n        \"email_address\": \"test3@example.com\",\n        \"lastip\": \"55.67.22.12\"\n      },\n      {\n        \"used\": 34,\n        \"bytecount\": 12452060,\n        \"avgsize\": 366237.0588235294,\n        \"email_address\": \"test@example.com\",\n        \"lastip\": \"55.67.22.12\"\n      },\n      {\n        \"used\": 2,\n        \"bytecount\": 1084,\n        \"avgsize\": 542,\n        \"email_address\": \"test2@example.com\",\n        \"lastip\": \"55.67.22.12\"\n      }\n    ]\n  }\n}</pre>\n\n</div>",
                "tags": [
                    "Statistics"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "end_date": {
                                    "description": "ISO-8601 formatted datetime which defaults to 30 days prior to the current date at midnight. Timezone is UTC.",
                                    "default": "Sun, 13 Aug 2017 20:59:20 GMT",
                                    "type": "string"
                                },
                                "group_by": {
                                    "description": "Either 'email_address' or 'username' - controls the grouping of results.",
                                    "default": "email_address",
                                    "type": "string"
                                },
                                "start_date": {
                                    "description": "ISO-8601 formatted datetime which defaults to the current date at midnight. Timezone is UTC.",
                                    "default": "Fri, 14 Jul 2017 20:59:20 GMT",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key",
                                "group_by"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "count": {
                                            "description": "How many emails were sent in the last 30 day period",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "history": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "used": {
                                                        "description": "How much of your quota was used by these emails",
                                                        "default": 0,
                                                        "type": "integer"
                                                    },
                                                    "bytecount": {
                                                        "description": "Total size in bytes of the combined emails",
                                                        "default": 0,
                                                        "type": "integer"
                                                    },
                                                    "avgsize": {
                                                        "description": "Average size in bytes of each email",
                                                        "default": 0,
                                                        "type": "float"
                                                    },
                                                    "email_address": {
                                                        "description": "The email address used to send",
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "description": "The username used to send",
                                                        "type": "string"
                                                    },
                                                    "lastip": {
                                                        "description": "The IP Address of the last email sent",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "An array of email history records",
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "count": 159,
                                    "history": [
                                        {
                                            "bytecount": 148113,
                                            "lastip": "55.67.22.12",
                                            "used": 123,
                                            "avgsize": 1204.1707317073171,
                                            "email_address": "test3@example.com"
                                        },
                                        {
                                            "bytecount": 12452060,
                                            "lastip": "55.67.22.12",
                                            "used": 34,
                                            "avgsize": 366237.0588235294,
                                            "email_address": "test@example.com"
                                        },
                                        {
                                            "bytecount": 1084,
                                            "lastip": "55.67.22.12",
                                            "used": 2,
                                            "avgsize": 542,
                                            "email_address": "test2@example.com"
                                        }
                                    ]
                                },
                                "request_id": "f3898083-f5d5-4512-86bd-e02bd1685840"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/stats/email_spam": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Report on email spam statistics</h4>\n\t<p>Rate limited to 1 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n  \"request_id\": \"0757ba83-9dfc-4584-bb0c-baa06a28a377\",\n  \"data\": {\n    \"emails\": 159,\n    \"rejects\": 0,\n    \"spams\": 0,\n    \"spam_percent\": \"0.00\"\n  }\n}</pre>\n\n</div>",
                "tags": [
                    "Statistics"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "emails": {
                                            "description": "The total number of emails send during the last 30 day period",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "rejects": {
                                            "description": "How many of those emails sent were rejected",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "spams": {
                                            "description": "How many of those rejects were marked as spam",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "spam_percent": {
                                            "description": "Percentage of emails sent that were rejected as spam",
                                            "default": "0.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "spam_percent"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "spam_percent": "0.00",
                                    "emails": 159,
                                    "spams": 0,
                                    "rejects": 0
                                },
                                "request_id": "0757ba83-9dfc-4584-bb0c-baa06a28a377"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/stats/email_unsubs": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Report on email unsubscribe statistics</h4>\n\t<p>Rate limited to 1 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n  \"request_id\": \"e6e94157-90c7-496d-abdf-a5fef899ad54\",\n  \"data\": {\n    \"emails\": 159,\n    \"rejects\": 0,\n    \"unsubscribes\": 0,\n    \"unsubscribe_percent\": \"0.00\"\n  }\n}</pre>\n\n</div>",
                "tags": [
                    "Statistics"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "emails": {
                                            "description": "The total number of emails send during the last 30 day period",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "rejects": {
                                            "description": "How many of those emails sent were rejected",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "unsubscribes": {
                                            "description": "How many of those rejects were marked as unsubscribes",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "unsubscribe_percent": {
                                            "description": "Percentage of emails sent that were marked as unsubscribed",
                                            "default": "0.0",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "emails": 159,
                                    "rejects": 0,
                                    "unsubscribes": 0,
                                    "unsubscribe_percent": "0.00"
                                },
                                "request_id": "e6e94157-90c7-496d-abdf-a5fef899ad54"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/stats/email_summary": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Retrieve a combination of the email_bounces, email_cycle, email_spam, and email_unsubs calls. This call may take longer to complete.</h4>\n\t<p>Rate limited to 1 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n  \"request_id\": \"72f48187-64d9-4a2f-ba9c-527a2a7911f7\",\n  \"data\": {\n    \"cycle_end\": \"2016-08-04 01:49:15.863998\",\n    \"cycle_start\": \"2016-08-01 01:49:15.863998\",\n    \"cycle_used\": 150,\n    \"cycle_remaining\": 850,\n    \"cycle_max\": 1000,\n    \"email_count\": 150,\n\n    \"bounce_rejects\": 11,\n    \"softbounces\": 6,\n    \"hardbounces\": 5,\n    \"bounce_percent\": \"7.33\",\n\n    \"spam_emails\": 2,\n    \"spam_rejects\": 1,\n    \"spam_percent\": \"1.33\",\n\n    \"unsubscribes\": 32,\n    \"unsubscribe_percent\": \"21.33\"\n  }\n}</pre>\n\n</div>",
                "tags": [
                    "Statistics"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "spam_emails": {
                                            "description": "How many of those emails were marked as spam",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "cycle_start": {
                                            "description": "An ISO-8601 formatted datetime containing the start of the monthly cycle",
                                            "type": "string"
                                        },
                                        "cycle_end": {
                                            "description": "An ISO-8601 formatted datetime containing the end of the monthly cycle",
                                            "type": "string"
                                        },
                                        "cycle_used": {
                                            "description": "Number of emails that have been sent during this monthly cycle",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "cycle_remaining": {
                                            "description": "The remaining email quota in this monthly cycle",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "cycle_max": {
                                            "description": "The total number of emails that can be sent during this monthly cycle",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "email_count": {
                                            "description": "The total number of emails sent during the last 30 day period",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "bounce_rejects": {
                                            "description": "How many of those emails were bounce rejects",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "softbounces": {
                                            "description": "How many of those rejects were softbounces",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "hardbounces": {
                                            "description": "How many of those emails were hardbounces",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "bounce_percent": {
                                            "description": "Percentage of emails sent that were bounced",
                                            "default": "0.0",
                                            "type": "string"
                                        },
                                        "spam_rejects": {
                                            "description": "How many of those emails were rejected as spam",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "spam_percent": {
                                            "description": "Percentage of emails sent that were rejected as spam",
                                            "default": "0.0",
                                            "type": "string"
                                        },
                                        "unsubscribes": {
                                            "description": "How many of those rejects were marked as unsubscribes",
                                            "default": 0,
                                            "type": "integer"
                                        },
                                        "unsubscribe_percent": {
                                            "description": "Percentage of emails sent that were marked as unsubscribed",
                                            "default": "0.0",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "spam_percent"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "hardbounces": 5,
                                    "cycle_remaining": 850,
                                    "spam_rejects": 1,
                                    "cycle_max": 1000,
                                    "softbounces": 6,
                                    "spam_emails": 2,
                                    "bounce_rejects": 11,
                                    "bounce_percent": "7.33",
                                    "unsubscribe_percent": "21.33",
                                    "cycle_end": "2016-08-04 01:49:15.863998",
                                    "cycle_used": 150,
                                    "unsubscribes": 32,
                                    "spam_percent": "1.33",
                                    "email_count": 150,
                                    "cycle_start": "2016-08-01 01:49:15.863998"
                                },
                                "request_id": "72f48187-64d9-4a2f-ba9c-527a2a7911f7"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/email/send": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Send an email by passing a JSON email object.</h4>\n\t<p>Rate limited to 250 request(s) per 60 seconds</p>\n\t\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-40246460336B11E6AA53F23C91285F72\",\n    \"to\": [\"Test Person &lt;test@example.com&gt;\"],\n    \"sender\": \"Test Persons Friend &lt;test2@example.com&gt;\",\n    \"subject\": \"Hello Test Person\",\n    \"text_body\": \"You're my favorite test person ever\",\n    \"html_body\": \"&lt;h1&gt;You're my favorite test person ever&lt;/h1&gt;\",\n    \"custom_headers\": [\n    \t{\n    \t\t\"header\": \"Reply-To\",\n    \t\t\"value\": \"Actual Person &lt;test3@example.com&gt;\"\n    \t}\n    ]\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t\t\"succeeded\": 1,\n\t\t\"failed\": 0,\n\t\t\"failures\": []\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "Emails"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "custom_headers": [
                                    {
                                        "header": "Reply-To",
                                        "value": "Actual Person <test3@example.com>"
                                    }
                                ],
                                "sender": "Test Persons Friend <test2@example.com>",
                                "html_body": "<h1>You're my favorite test person ever</h1>",
                                "subject": "Hello Test Person",
                                "api_key": "api-40246460336B11E6AA53F23C91285F72",
                                "text_body": "You're my favorite test person ever",
                                "to": [
                                    "Test Person <test@example.com>"
                                ]
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "sender": {
                                    "description": "The email address to send from, eg. \"John Smith <john@example.com>\"",
                                    "type": "string"
                                },
                                "to": {
                                    "items": {
                                        "description": "An email address to send to.",
                                        "type": "string"
                                    },
                                    "description": "An array of email addresses (up to 100) to send to, eg. [\"John Smith <john@example.com>\", \"Jane Doe <jane@example.com>\"]",
                                    "maxItems": 100,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "cc": {
                                    "items": {
                                        "description": "An email address to cc to.",
                                        "type": "string"
                                    },
                                    "description": "An array of email addresses (up to 100) to cc to, eg. [\"John Smith <john@example.com>\", \"Jane Doe <jane@example.com>\"]",
                                    "maxItems": 100,
                                    "type": "array"
                                },
                                "bcc": {
                                    "items": {
                                        "description": "An email address to bcc to.",
                                        "type": "string"
                                    },
                                    "description": "An array of email addresses (up to 100) to bcc to, eg. [\"John Smith <john@example.com>\", \"Jane Doe <jane@example.com>\"]",
                                    "maxItems": 100,
                                    "type": "array"
                                },
                                "subject": {
                                    "description": "The subject of the email to be sent.",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "html_body": {
                                    "description": "An HTML encoded email body.",
                                    "type": "string"
                                },
                                "text_body": {
                                    "description": "A plaintext email body.",
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "custom_headers": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "header": {
                                                "description": "Custom header to add to the email",
                                                "maxLength": 127,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Custom header value to set",
                                                "maxLength": 127,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "header",
                                            "value"
                                        ],
                                        "type": "object"
                                    },
                                    "description": "An optional set of custom headers to be applied to the email.",
                                    "type": "array"
                                },
                                "attachments": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "filename": {
                                                "description": "The filename to use for this binary data",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "fileblob": {
                                                "description": "The Base64 encoded binary data of the file ",
                                                "type": "string"
                                            },
                                            "mimetype": {
                                                "description": "The mimetype of the binary data",
                                                "maxLength": 127,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "filename",
                                            "fileblob",
                                            "mimetype"
                                        ],
                                        "type": "object"
                                    },
                                    "description": "An array of attachment objects to be attached to the email.",
                                    "type": "array"
                                },
                                "inlines": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "filename": {
                                                "description": "The filename to use for this binary data",
                                                "maxLength": 255,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "fileblob": {
                                                "description": "The Base64 encoded binary data of the file ",
                                                "type": "string"
                                            },
                                            "mimetype": {
                                                "description": "The mimetype of the binary data",
                                                "maxLength": 127,
                                                "minLength": 1,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "filename",
                                            "fileblob",
                                            "mimetype"
                                        ],
                                        "type": "object"
                                    },
                                    "description": "An array of images to be inlined into the email.",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "api_key",
                                "sender",
                                "to",
                                "subject",
                                "text_body"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "succeeded": {
                                            "description": "The number of emails that were successfully sent",
                                            "type": "integer"
                                        },
                                        "failed": {
                                            "description": "The number of emails that failed to be sent",
                                            "type": "integer"
                                        },
                                        "failures": {
                                            "items": {
                                                "description": "",
                                                "type": "string"
                                            },
                                            "description": "",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "succeeded",
                                        "failed",
                                        "failures"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "succeeded": 1,
                                    "failed": 0,
                                    "failures": []
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/email/mime": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Send an email by supplying a pre-encoded MIME string.</h4>\n\t<p>Rate limited to 250 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-40246460336B11E6AA53F23C91285F72\",\n    \"mime_email\": \"RnJvbTogSm9obiBEb2UgPGV4YW1wbGVAZXhhbXBsZS5jb20+DQpNSU1FLVZlcnNpb246IDEuMA0KQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7DQogICAgICAgIGJvdW5kYXJ5PSJYWFhYYm91bmRhcnkgdGV4dCINCg0KVGhpcyBpcyBhIG11bHRpcGFydCBtZXNzYWdlIGluIE1JTUUgZm9ybWF0Lg0KDQotLVhYWFhib3VuZGFyeSB0ZXh0IA0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluDQoNCnRoaXMgaXMgdGhlIGJvZHkgdGV4dA0KDQotLVhYWFhib3VuZGFyeSB0ZXh0IA0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOw0KQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsNCiAgICAgICAgZmlsZW5hbWU9InRlc3QudHh0Ig0KDQp0aGlzIGlzIHRoZSBhdHRhY2htZW50IHRleHQNCg0KLS1YWFhYYm91bmRhcnkgdGV4dC0t\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t\t\"succeeded\": 1,\n\t\t\"failed\": 0,\n\t\t\"failures\": []\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "Emails"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "mime_email": "RnJvbTogSm9obiBEb2UgPGV4YW1wbGVAZXhhbXBsZS5jb20+DQpNSU1FLVZlcnNpb246IDEuMA0KQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7DQogICAgICAgIGJvdW5kYXJ5PSJYWFhYYm91bmRhcnkgdGV4dCINCg0KVGhpcyBpcyBhIG11bHRpcGFydCBtZXNzYWdlIGluIE1JTUUgZm9ybWF0Lg0KDQotLVhYWFhib3VuZGFyeSB0ZXh0IA0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluDQoNCnRoaXMgaXMgdGhlIGJvZHkgdGV4dA0KDQotLVhYWFhib3VuZGFyeSB0ZXh0IA0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOw0KQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsNCiAgICAgICAgZmlsZW5hbWU9InRlc3QudHh0Ig0KDQp0aGlzIGlzIHRoZSBhdHRhY2htZW50IHRleHQNCg0KLS1YWFhYYm91bmRhcnkgdGV4dC0t",
                                "api_key": "api-40246460336B11E6AA53F23C91285F72"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "mime_email": {
                                    "description": "A valid MIME-encoded Email that has been Base64 encoded.",
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key",
                                "mime_email"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "succeeded": {
                                            "description": "The number of emails that were successfully sent",
                                            "type": "integer"
                                        },
                                        "failed": {
                                            "description": "The number of emails that failed to be sent",
                                            "type": "integer"
                                        },
                                        "failures": {
                                            "items": {
                                                "description": "",
                                                "type": "string"
                                            },
                                            "description": "",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "succeeded",
                                        "failed",
                                        "failures"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "succeeded": 1,
                                    "failed": 0,
                                    "failures": []
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/email/search": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Retrieve a list of up to 5,000 sent emails matching the supplied parameters.</h4>\n\t<p>Rate limited to 4 request(s) per 60 seconds</p>\n\n\t<h2>Query Syntax</h2>\n\n\t<p>\n\t\tThe <strong>filter_query</strong> field utilizes a subset of the Whoosh API which can be used\n\t\tto create complex filters to make searching more efficient.\n\t</p>\n\n\t<p>From the <a target=\"_blank\" href=\"https://whoosh.readthedocs.io/en/latest/querylang.html\">Whoosh documentation</a>:</p>\n\n\t<pre style=\"margin:10px;\">A query is broken up into terms and operators. There are two types of terms: Single Terms and Phrases.\n\nA Single Term is a single word such as \"test\" or \"hello\".\n\nA Phrase is a group of words surrounded by double quotes such as \"hello dolly\".</pre>\n\n\t<p>\n\t\tMultiple terms can be combined together with Boolean operators to form a more complex query.\n\t</p>\n\n\t<p>\n\t\tThe API supports all of the boolean operators like <strong>AND</strong>, <strong>OR</strong>, and <strong>NOT</strong>.\n\t</p>\n\n\t<p>\n\t\tIf you want to search a specific field for something, use the field name followed by a colon and then your search \n\t\tterm or phrase. The following fields are indexed  and can be used for searching emails:\n\t</p>\n\n\t<table>\n\t\t<tr>\n\t\t\t<th style=\"white-space:nowrap;\">Field Name</th>\n\t\t\t<th>Description</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>sender</td>\n\t\t\t<td>The sender/from email address.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>sent_ts</td>\n\t\t\t<td>Unix timestamp when the message was sent.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>recipient</td>\n\t\t\t<td>The recipient email address(s).</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>subject</td>\n\t\t\t<td>The Subject header.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>delivered_ts</td>\n\t\t\t<td>Unix timestamp when the message reached its destination.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td valign=\"top\">status</td>\n\t\t\t<td>Status of the email should be one of the following ('softbounce', 'hardbounce', 'sent', 'rejected', 'spam', 'unsubscribed').</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>email_id</td>\n\t\t\t<td>A unique identifier of the email.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>smtpcode</td>\n\t\t\t<td>The response code from the destination SMTP server.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>host</td>\n\t\t\t<td>The destination host.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>headers</td>\n\t\t\t<td>The headers of the email. <i>See notes below for usage</i>.</td>\n\t\t</tr>\n\t</table>\n\n\t<h3>Examples</h3>\n\n\t<pre>subject:welcome OR subject:bienvenidos</pre>\n\n\t<p>\n\t\tSearches messages that contain 'welcome' or 'bienvenidos' in the subject line.\n\t</p>\n\n\t<pre>recipient:joe@domain AND sender:me@company.com</pre>\n\n\t<p>\n\t\tSearches for messages sent to recipients whose email addresses start with joe@domain \n\t\t(to capture, for example joe@domain.com, joe@domain.net and joe@domain.org) that were also \n\t\tsent by me@company.com.\n\t</p>\n\n\t<pre>recipient:gmail.com</pre>\n\n\t<p>\n\t\tSearches for all recipients with 'gmail.com' in the address. If you have a recipient with the \n\t\taddress gmail.com@domain.com, that will also be included in this search, but this will generally \n\t\treturn all recipients for the gmail.com domain.\n\t</p>\n\n\t<h3>Header Searching</h3>\n\n\t<p>\n\t\tAny email header can be searched. The search must be exact, as part matches won't be returned.\n\t</p>\n\t<p>\n\t\tThis query must also be a Phrase surrounded by single quotes.\n\t</p>\n\n\t<pre>headers:'X-ExampleCustomHeader: Exact String to Match'</pre>\n\n\t<p>\n\t\tIn order to search for multiple headers you must separate the header searches with a semi-colon character.\n\t</p>\n\n\t<pre>headers:'X-ExampleCustomHeader: Exact String to Match; X-OfficeId: headquarters;'</pre>\n\n\t<h2>Continue Token</h2>\n\n\t<p>\n\t\tThe <strong>continue_token</strong> field, if returned in the response of a search request, indicates that results exceeding \n\t\tthe limit (either passed in the request, or the default value) are available.\n\t</p>\n\t<p>\n\t\tIn the event that you receive a continue_token string, you can pass it along with all of the original request \n\t\tdata to continue the search and retrieve the next batch of results.\n\t</p>\n\t<p>\n\t\t<i>Note that in the event of multiple search batches, the continue_token will change for each request so the latest\n\t\tone should always be passed, otherwise you will continue to receive the same batch of results.</i>\n\t</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"start_date\": \"2016-06-26\",\n    \"end_date\": \"2016-06-28\",\n    \"limit\": 5,\n    \"filter_query\": \"subject:Test AND recipient:test@example.com\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n  \"request_id\": \"84fe4a7e-1487-4ddf-92cb-4c6f8e6b2070\",\n  \"data\": {\n    \"count\": 5,\n    \"emails\": [\n      {\n        \"delivered_at\": \"2016-06-27 01:06:42.668336+00:00\",\n        \"process_status\": \"completed\",\n        \"email_id\": \"1bHL0X-eTG8B7-3B\",\n        \"status\": \"ok\",\n        \"response\": \"250 2.0.0 OK 1466989602 87si22895035pfn.73 - gsmtp\",\n        \"email_ts\": \"2016-06-27 01:06:37.039400+00:00\",\n        \"host\": \"gmail-smtp-in.l.google.com [74.125.200.27]\",\n        \"smtpcode\": 250,\n        \"sender\": \"test@example.com\",\n        \"recipient\": \"test2@example.com\"\n      },\n      {\n        \"delivered_at\": \"2016-06-27 01:06:42.594890+00:00\",\n        \"process_status\": \"completed\",\n        \"email_id\": \"1bHL0X-eTG8B7-3B\",\n        \"status\": \"ok\",\n        \"response\": \"250 2.0.0 OK 1466989601 87si22895035pfn.73 - gsmtp\",\n        \"email_ts\": \"2016-06-27 01:06:37.039400+00:00\",\n        \"host\": \"gmail-smtp-in.l.google.com [74.125.200.27]\",\n        \"smtpcode\": 250,\n        \"sender\": \"test@example.com\",\n        \"recipient\": \"test2@example.com\"\n      },\n      {\n        \"delivered_at\": \"2016-06-27 01:10:04.898776+00:00\",\n        \"process_status\": \"completed\",\n        \"email_id\": \"1bHL3n-eTG8Hc-Gw\",\n        \"status\": \"ok\",\n        \"response\": \"250 2.0.0 OK 1466989803 v63si22902674pfv.160 - gsmtp\",\n        \"email_ts\": \"2016-06-27 01:09:59.210000+00:00\",\n        \"host\": \"gmail-smtp-in.l.google.com [74.125.200.26]\",\n        \"smtpcode\": 250,\n        \"sender\": \"test@example.com\",\n        \"recipient\": \"test2@example.com\"\n      },\n      {\n        \"delivered_at\": \"2016-06-27 01:10:05.055130+00:00\",\n        \"process_status\": \"completed\",\n        \"email_id\": \"1bHL3n-eTG8Hc-Gw\",\n        \"status\": \"ok\",\n        \"response\": \"250 2.0.0 OK 1466989804 v63si22902674pfv.160 - gsmtp\",\n        \"email_ts\": \"2016-06-27 01:09:59.210000+00:00\",\n        \"host\": \"gmail-smtp-in.l.google.com [74.125.200.26]\",\n        \"smtpcode\": 250,\n        \"sender\": \"test@example.com\",\n        \"recipient\": \"test2@example.com\"\n      },\n      {\n        \"delivered_at\": \"2016-06-27 01:10:05.112938+00:00\",\n        \"process_status\": \"completed\",\n        \"email_id\": \"1bHL3n-eTG8Hb-Gx\",\n        \"status\": \"ok\",\n        \"response\": \"250 2.0.0 OK 1466989804 b66si22931115pfg.52 - gsmtp\",\n        \"email_ts\": \"2016-06-27 01:09:59.210200+00:00\",\n        \"host\": \"gmail-smtp-in.l.google.com [74.125.200.26]\",\n        \"smtpcode\": 250,\n        \"sender\": \"test@example.com\",\n        \"recipient\": \"test2@example.com\"\n      }\n    ],\n    \"continue_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE0Njc4NTY4ODEsImRhdCI6eyJvZmYiOjUsInFpZCI6MX0sImlzcyI6ImFwaS5zbXRwMmdvLmNvbSIsImlhdCI6MTQ2Nzg1NjU4MX0.Pgl5rl7hsgFrVIa9TTFDyi7Y8o_mCHDPE227qNINQd3_rZwgfnPAhDRmsyQMGqQDJHfr5NNF_V9cPTpWNkXikUUDFaEHoXnFkbDxAqtb6n40KA3pVjG1D8QDKTjONGBqDs3zOujUSb_CR9oYkQXnnFRfy2K-ZXoJuMpqIB3A1gbg3KdZCLjzKHi0hkvIUBCnkERksq9pdAB15dnAkkDliEUHOB2SpA05brBEHTRF_H7az9NkrVm1STPX7x3hq5Qg6gZPWCuwpNKpdP-MnHhThmq67Y8LVL7kmR4dKkON1uamf4UxDK3BK8hef7fty1x1K9BSa8ils5BeolV_2BU0aw\"\n  }\n}</pre>\n\n</div>",
                "tags": [
                    "Emails"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "end_date": "2016-06-28",
                                "limit": 5,
                                "start_date": "2016-06-26",
                                "filter_query": "subject:Test AND recipient:test@example.com",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "continue_token": {
                                    "description": "Pass this if the result of this query returns it, used to continue the previous search if too many results were found.",
                                    "type": "string"
                                },
                                "start_date": {
                                    "description": "ISO-8601 formatted datetime which defaults to current date at midnight. The range will be inclusive of start_date and exclusive of end_date. Timezone is UTC.",
                                    "default": "Sun, 13 Aug 2017 00:00:00 GMT",
                                    "type": "string"
                                },
                                "end_date": {
                                    "description": "ISO-8601 formatted datetime which defaults to now. Timezone is UTC.",
                                    "default": "Sun, 13 Aug 2017 20:59:20 GMT",
                                    "type": "string"
                                },
                                "limit": {
                                    "description": "The maximum number of emails to return. This defaults to 5,000, which is also the maximum value allowed.",
                                    "default": 5000,
                                    "type": "integer"
                                },
                                "email_id": {
                                    "items": {
                                        "description": "The ID of an email.",
                                        "type": "string"
                                    },
                                    "description": "Returns only emails with an ID contained within this array.",
                                    "type": "array"
                                },
                                "filter_query": {
                                    "description": "Optional search field to filter results. The query format is documented above. ",
                                    "type": "string"
                                },
                                "headers": {
                                    "items": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "description": "Returns the specified email header values.",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "count": {
                                            "description": "The total number of emails matching the search parameters",
                                            "type": "integer"
                                        },
                                        "emails": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "delivered_at": {
                                                        "description": "The timestamp at which the delivery was made.",
                                                        "type": "string"
                                                    },
                                                    "process_status": {
                                                        "description": "The current status in the deliver process. Can be completed, processing, or rejected.",
                                                        "type": "string"
                                                    },
                                                    "email_id": {
                                                        "description": "The unique ID for the delivery attempt.",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "The status of the email.",
                                                        "type": "string"
                                                    },
                                                    "response": {
                                                        "description": "The response from the SMTP server, or reason for failure if the server was not contacted.",
                                                        "type": "string"
                                                    },
                                                    "email_ts": {
                                                        "description": "The ISO-8601 timestamp that the email was originally sent at.",
                                                        "type": "string"
                                                    },
                                                    "host": {
                                                        "description": "The SMTP Server that was connected to when attempting to deliver the email.",
                                                        "type": "string"
                                                    },
                                                    "smtpcode": {
                                                        "description": "The SMTP response code from the SMTP server.",
                                                        "type": "integer"
                                                    },
                                                    "sender": {
                                                        "description": "The email address the email was sent from.",
                                                        "type": "string"
                                                    },
                                                    "recipient": {
                                                        "description": "The email address the email was sent to.",
                                                        "type": "string"
                                                    },
                                                    "headers": {
                                                        "items": {
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "key": {
                                                                    "description": "",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "description": "An array of tuples containing the header keys requested",
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "An array of email information objects",
                                            "type": "array"
                                        },
                                        "continue_token": {
                                            "description": "A Token that can be passed in order to continue this query",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "count",
                                        "emails"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "continue_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE0Njc4NTY4ODEsImRhdCI6eyJvZmYiOjUsInFpZCI6MX0sImlzcyI6ImFwaS5zbXRwMmdvLmNvbSIsImlhdCI6MTQ2Nzg1NjU4MX0.Pgl5rl7hsgFrVIa9TTFDyi7Y8o_mCHDPE227qNINQd3_rZwgfnPAhDRmsyQMGqQDJHfr5NNF_V9cPTpWNkXikUUDFaEHoXnFkbDxAqtb6n40KA3pVjG1D8QDKTjONGBqDs3zOujUSb_CR9oYkQXnnFRfy2K-ZXoJuMpqIB3A1gbg3KdZCLjzKHi0hkvIUBCnkERksq9pdAB15dnAkkDliEUHOB2SpA05brBEHTRF_H7az9NkrVm1STPX7x3hq5Qg6gZPWCuwpNKpdP-MnHhThmq67Y8LVL7kmR4dKkON1uamf4UxDK3BK8hef7fty1x1K9BSa8ils5BeolV_2BU0aw",
                                    "count": 5,
                                    "emails": [
                                        {
                                            "smtpcode": 250,
                                            "process_status": "completed",
                                            "email_id": "1bHL0X-eTG8B7-3B",
                                            "response": "250 2.0.0 OK 1466989602 87si22895035pfn.73 - gsmtp",
                                            "recipient": "test2@example.com",
                                            "host": "gmail-smtp-in.l.google.com [74.125.200.27]",
                                            "email_ts": "2016-06-27 01:06:37.039400+00:00",
                                            "status": "ok",
                                            "delivered_at": "2016-06-27 01:06:42.668336+00:00",
                                            "sender": "test@example.com"
                                        },
                                        {
                                            "smtpcode": 250,
                                            "process_status": "completed",
                                            "email_id": "1bHL0X-eTG8B7-3B",
                                            "response": "250 2.0.0 OK 1466989601 87si22895035pfn.73 - gsmtp",
                                            "recipient": "test2@example.com",
                                            "host": "gmail-smtp-in.l.google.com [74.125.200.27]",
                                            "email_ts": "2016-06-27 01:06:37.039400+00:00",
                                            "status": "ok",
                                            "delivered_at": "2016-06-27 01:06:42.594890+00:00",
                                            "sender": "test@example.com"
                                        },
                                        {
                                            "smtpcode": 250,
                                            "process_status": "completed",
                                            "email_id": "1bHL3n-eTG8Hc-Gw",
                                            "response": "250 2.0.0 OK 1466989803 v63si22902674pfv.160 - gsmtp",
                                            "recipient": "test2@example.com",
                                            "host": "gmail-smtp-in.l.google.com [74.125.200.26]",
                                            "email_ts": "2016-06-27 01:09:59.210000+00:00",
                                            "status": "ok",
                                            "delivered_at": "2016-06-27 01:10:04.898776+00:00",
                                            "sender": "test@example.com"
                                        },
                                        {
                                            "smtpcode": 250,
                                            "process_status": "completed",
                                            "email_id": "1bHL3n-eTG8Hc-Gw",
                                            "response": "250 2.0.0 OK 1466989804 v63si22902674pfv.160 - gsmtp",
                                            "recipient": "test2@example.com",
                                            "host": "gmail-smtp-in.l.google.com [74.125.200.26]",
                                            "email_ts": "2016-06-27 01:09:59.210000+00:00",
                                            "status": "ok",
                                            "delivered_at": "2016-06-27 01:10:05.055130+00:00",
                                            "sender": "test@example.com"
                                        },
                                        {
                                            "smtpcode": 250,
                                            "process_status": "completed",
                                            "email_id": "1bHL3n-eTG8Hb-Gx",
                                            "response": "250 2.0.0 OK 1466989804 b66si22931115pfg.52 - gsmtp",
                                            "recipient": "test2@example.com",
                                            "host": "gmail-smtp-in.l.google.com [74.125.200.26]",
                                            "email_ts": "2016-06-27 01:09:59.210200+00:00",
                                            "status": "ok",
                                            "delivered_at": "2016-06-27 01:10:05.112938+00:00",
                                            "sender": "test@example.com"
                                        }
                                    ]
                                },
                                "request_id": "84fe4a7e-1487-4ddf-92cb-4c6f8e6b2070"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/blocklist/view": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Returns your blocked email addresses.</h4>\n\t<p>Rate limited to 30 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"email_address\": \"test@example.com\",\n    \"wildcard\": \"test@\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t\t\"results\": [\n\t        {\n\t            \"email_address\": \"test2@example.com\",\n\t            \"complaint\": \"AUTOMATIC spam block\",\n\t            \"reason\": \"spam\",\n\t            \"timestamp\": \"2016-07-07 01:06:40.956040\"\n\t        },\n\t        {\n\t            \"email_address\": \"test@yourdomain.com\",\n\t            \"complaint\": \"AUTOMATIC spam block\",\n\t            \"reason\": \"unsubscribe\",\n\t            \"timestamp\": \"2016-07-07 01:06:40.956098\"\n\t        }\n        ]\t\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "Email Blocklist"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "email_address": "test@example.com",
                                "wildcard": "test@",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "wildcard": {
                                    "description": "A name, domain, or partial email address, if this is provided, the API call will return only addresses matching this wildcard.",
                                    "type": "string"
                                },
                                "email_address": {
                                    "description": "Check if a specific email address is in the block list.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "complaint": {
                                                        "description": "Complaint string if any was lodged",
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "description": "String outlining why the email address was blocked one of (spam, bounce, unsubscribe, manual)",
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "description": "Timestamp when this email was blocked",
                                                        "type": "string"
                                                    },
                                                    "email_address": {
                                                        "description": "An email address matching the search criteria",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "reason",
                                                    "timestamp"
                                                ],
                                                "type": "object"
                                            },
                                            "description": "An array of block results",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "results"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "results": [
                                        {
                                            "complaint": "AUTOMATIC spam block",
                                            "reason": "spam",
                                            "timestamp": "2016-07-07 01:06:40.956040",
                                            "email_address": "test2@example.com"
                                        },
                                        {
                                            "complaint": "AUTOMATIC spam block",
                                            "reason": "unsubscribe",
                                            "timestamp": "2016-07-07 01:06:40.956098",
                                            "email_address": "test@yourdomain.com"
                                        }
                                    ]
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/blocklist/add": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Blocks the specified email address.</h4>\n\t<p>Rate limited to 30 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"email_address\": \"test@example.com\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t    \"added\": true,\n    \t\"email_address\": \"test@example.com\"\n    }\n}</pre>\n\n</div>",
                "tags": [
                    "Email Blocklist"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "email_address": "test@example.com",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "email_address": {
                                    "description": "The email address you would like to add to your blocklist",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key",
                                "email_address"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "added": {
                                            "description": "True if the email address was added otherwise False",
                                            "type": "boolean"
                                        },
                                        "email_address": {
                                            "description": "The email address that you attempted to add to the blocklist",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "added",
                                        "email_address"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "added": true,
                                    "email_address": "test@example.com"
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/blocklist/remove": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Removes the block on the specified email address.</h4>\n\t<p>Rate limited to 30 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"email_address\": \"test@example.com\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t    \"removed\": true,\n\t    \"email_address\": \"test@example.com\"\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "Email Blocklist"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "email_address": "test@example.com",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "email_address": {
                                    "description": "The email address you would like to remove from your blocklist",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key",
                                "email_address"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "removed": {
                                            "description": "True if the email address was removed from your blocklist otherwise False",
                                            "type": "boolean"
                                        },
                                        "email_address": {
                                            "description": "The email address that you attempted to remove from the blocklist",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "removed",
                                        "email_address"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "removed": true,
                                    "email_address": "test@example.com"
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/users/smtp/view": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Return a list of SMTP user(s)</h4>\n\t<p>Rate limited to 30 request(s) per 60 seconds</p>\n\t<p>\n\t\tReturn a list of all/one SMTP user(s) that are managed by\n\t\tthis account. If no users are available this will return an \n\t\tempty list.\n\t</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"username\": \"smtpuser@example.com\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t\t\"results\": [\n\t\t\t{\n\t\t\t\t\"username\": \"smtpuser@example.com\",\n\t\t\t\t\"email_password\": \"H#8dkK2djs\",\n\t\t\t\t\"custom_ratelimit\": true,\n\t\t\t\t\"custom_ratelimit_value\": 100,\n\t\t\t\t\"custom_ratelimit_period\": \"1 day\",\n\t\t\t\t\"comments\": \"Comment explaining why we edited this user\"\n\t\t    }\n\t\t]\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "SMTP Users"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "username": "smtpuser@example.com",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "username": {
                                    "description": "The username for this user",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "username": {
                                                        "description": "The username for this user",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "^[A-Za-z0-9\\.\\_\\-\\@]+",
                                                        "type": "string"
                                                    },
                                                    "email_password": {
                                                        "description": "The password for this user when sending email.",
                                                        "type": "string"
                                                    },
                                                    "sending_allowed": {
                                                        "description": "Whether or not this user can send email.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit": {
                                                        "description": "Whether this user has a custom rate limit.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit_value": {
                                                        "description": "If custom_ratelimit is true, how many emails this user can send in the period specified in custom_ratelimit_period.",
                                                        "type": "integer"
                                                    },
                                                    "custom_ratelimit_period": {
                                                        "description": "If custom_ratelimit is true, the period in minutes in which the user will be limited to the number of emails specified in custom_ratelimit_value.",
                                                        "type": "string"
                                                    },
                                                    "comments": {
                                                        "description": "Any comments or additional information about this user.",
                                                        "type": "string"
                                                    },
                                                    "feedback_enabled": {
                                                        "description": "Are custom feedback inserts specified",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "feedback_domain": {
                                                        "description": "The domain to insert into the custom feedback links",
                                                        "default": "default",
                                                        "type": "string"
                                                    },
                                                    "feedback_html": {
                                                        "description": "HTML Content to use in text/html email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "feedback_text": {
                                                        "description": "Text Content to use in text/plain email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "archive_enabled": {
                                                        "description": "Is archiving enabled for this user",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "audit_email": {
                                                        "description": "BCC Address for this user key",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "username",
                                                    "sending_allowed",
                                                    "custom_ratelimit"
                                                ],
                                                "type": "object"
                                            },
                                            "description": "A list of users that were returned by the last action",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "results"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "results": [
                                        {
                                            "comments": "Comment explaining why we edited this user",
                                            "email_password": "H#8dkK2djs",
                                            "custom_ratelimit_period": "1 day",
                                            "username": "smtpuser@example.com",
                                            "custom_ratelimit": true,
                                            "custom_ratelimit_value": 100
                                        }
                                    ]
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/users/smtp/add": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Adds a new SMTP user with the properties passed in the request data.</h4>\n\t<p>Rate limited to 30 request(s) per 60 seconds</p>\n\n\t<h4>Field Formats</h4>\n\n\t<h5>custom_ratelimit_period</h5>\n\t<p>\n\t\tThis should be a string outlining the period of time the rate limit is in effect, The format\n\t\tof this field can be specified a few ways:\n\t</p>\n\t<ol>\n\t\t<li>A string containing only seconds: ie. '3600' which would equal 1 hour</li>\n\t\t<li>A timestamp string: ie '01:00:00.00' which again would equal 1 hour ( up to a maximum of 23:59:59.99 ) - not the '.99' is a microseconds specifier</li>\n\t\t<li>A day specifier: ie '1 day' or '20 days'</li>\n\t\t<li>A combination of all of them ie. '1 day, 23:00:00.35'</li>\n\t</ol>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"username\": \"smtpuser@example.com\",\n    \"email_password\": null,\n    \"custom_ratelimit\": true,\n    \"custom_ratelimit_value\": 100,\n    \"custom_ratelimit_period\": \"1 day\",\n    \"comments\": \"Comment explaining how amazing this Test person is\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t\t\"results\": \n\t\t[\n\t\t\t{\n\t\t\t\t\"username\": \"smtpuser@example.com\",\n\t\t\t\t\"email_password\": \"H#8dkK2djs\",\n\t\t\t\t\"custom_ratelimit\": true,\n\t\t\t\t\"custom_ratelimit_value\": 100,\n\t\t\t\t\"custom_ratelimit_period\": \"1 day\",\n\t\t    \t\"comments\": \"Comment explaining how amazing this Test person is\"\n\t\t    }\n\t\t]\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "SMTP Users"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "comments": "Comment explaining how amazing this Test person is",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5",
                                "custom_ratelimit_period": "1 day",
                                "email_password": null,
                                "username": "smtpuser@example.com",
                                "custom_ratelimit": true,
                                "custom_ratelimit_value": 100
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "email_password": {
                                    "description": "The password for this user when sending email.",
                                    "default": "6Wf4'_pDCDym1'Fh",
                                    "type": "string"
                                },
                                "custom_ratelimit": {
                                    "description": "Whether this user has a custom rate limit.",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "username": {
                                    "description": "A valid smtp2go username to add onto your account.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "pattern": "^[A-Za-z0-9\\.\\_\\-\\@]+",
                                    "type": "string"
                                },
                                "custom_ratelimit_value": {
                                    "description": "If custom_ratelimit is true, how many emails this user can send in the period specified in custom_ratelimit_period.",
                                    "type": "integer"
                                },
                                "custom_ratelimit_period": {
                                    "description": "If custom_ratelimit is true, a period in which the user will be limited to the number of emails specified in custom_ratelimit_value. see above for more details",
                                    "type": "string"
                                },
                                "comments": {
                                    "description": "Any comments or additional information about this user.",
                                    "default": "",
                                    "type": "string"
                                },
                                "feedback_enabled": {
                                    "description": "Are custom feedback inserts specified",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "feedback_domain": {
                                    "description": "The domain to insert into the custom feedback links",
                                    "default": "default",
                                    "type": "string"
                                },
                                "feedback_html": {
                                    "description": "HTML Content to use in text/html email body",
                                    "default": "",
                                    "type": "string"
                                },
                                "feedback_text": {
                                    "description": "Text Content to use in text/plain email body",
                                    "default": "",
                                    "type": "string"
                                },
                                "archive_enabled": {
                                    "description": "Is archiving enabled for this user",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "audit_email": {
                                    "description": "BCC Address for this user key",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key",
                                "email_password",
                                "username"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "username": {
                                                        "description": "The username for this user",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "^[A-Za-z0-9\\.\\_\\-\\@]+",
                                                        "type": "string"
                                                    },
                                                    "email_password": {
                                                        "description": "The password for this user when sending email.",
                                                        "type": "string"
                                                    },
                                                    "sending_allowed": {
                                                        "description": "Whether or not this user can send email.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit": {
                                                        "description": "Whether this user has a custom rate limit.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit_value": {
                                                        "description": "If custom_ratelimit is true, how many emails this user can send in the period specified in custom_ratelimit_period.",
                                                        "type": "integer"
                                                    },
                                                    "custom_ratelimit_period": {
                                                        "description": "If custom_ratelimit is true, the period in minutes in which the user will be limited to the number of emails specified in custom_ratelimit_value.",
                                                        "type": "string"
                                                    },
                                                    "comments": {
                                                        "description": "Any comments or additional information about this user.",
                                                        "type": "string"
                                                    },
                                                    "feedback_enabled": {
                                                        "description": "Are custom feedback inserts specified",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "feedback_domain": {
                                                        "description": "The domain to insert into the custom feedback links",
                                                        "default": "default",
                                                        "type": "string"
                                                    },
                                                    "feedback_html": {
                                                        "description": "HTML Content to use in text/html email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "feedback_text": {
                                                        "description": "Text Content to use in text/plain email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "archive_enabled": {
                                                        "description": "Is archiving enabled for this user",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "audit_email": {
                                                        "description": "BCC Address for this user key",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "username",
                                                    "sending_allowed",
                                                    "custom_ratelimit"
                                                ],
                                                "type": "object"
                                            },
                                            "description": "A list of users that were returned by the last action",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "results"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "results": [
                                        {
                                            "comments": "Comment explaining how amazing this Test person is",
                                            "email_password": "H#8dkK2djs",
                                            "custom_ratelimit_period": "1 day",
                                            "username": "smtpuser@example.com",
                                            "custom_ratelimit": true,
                                            "custom_ratelimit_value": 100
                                        }
                                    ]
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/users/smtp/edit": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Update an SMTP user with the parameters passed.</h4>\n\t<p>Rate limited to 30 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"username\": \"smtpuser@example.com\",\n    \"email_password\": null,\n    \"custom_ratelimit\": true,\n    \"custom_ratelimit_value\": 100,\n    \"custom_ratelimit_period\": \"1 day\",\n    \"comments\": \"Comment explaining why we edited this user\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t\t\"results\": [\n\t\t\t{\n\t\t\t\t\"username\": \"smtpuser@example.com\",\n\t\t\t\t\"email_password\": \"H#8dkK2djs\",\n\t\t\t\t\"custom_ratelimit\": true,\n\t\t\t\t\"custom_ratelimit_value\": 100,\n\t\t\t\t\"custom_ratelimit_period\": \"1 day\",\n\t\t    \t\"comments\": \"Comment explaining why we edited this user\"\n\t\t\t}\n\t\t]\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "SMTP Users"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "comments": "Comment explaining why we edited this user",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5",
                                "custom_ratelimit_period": "1 day",
                                "email_password": null,
                                "username": "smtpuser@example.com",
                                "custom_ratelimit": true,
                                "custom_ratelimit_value": 100
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "feedback_enabled": {
                                    "description": "",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "feedback_html": {
                                    "description": "",
                                    "default": "",
                                    "type": "string"
                                },
                                "feedback_text": {
                                    "description": "",
                                    "default": "",
                                    "type": "string"
                                },
                                "feedback_domain": {
                                    "description": "",
                                    "default": "default",
                                    "type": "string"
                                },
                                "username": {
                                    "description": "The username of an existing account user you want to perform the action on.",
                                    "type": "string"
                                },
                                "email_password": {
                                    "description": "The password for this user when sending email.",
                                    "type": "string"
                                },
                                "custom_ratelimit": {
                                    "description": "Whether this user has a custom rate limit.",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "custom_ratelimit_value": {
                                    "description": "If custom_ratelimit is true, how many emails this user can send in the period specified in custom_ratelimit_period.",
                                    "type": "integer"
                                },
                                "custom_ratelimit_period": {
                                    "description": "If custom_ratelimit is true, the period in minutes in which the user will be limited to the number of emails specified in custom_ratelimit_value.",
                                    "type": "string"
                                },
                                "comments": {
                                    "description": "Any comments or additional information about this user.",
                                    "default": "",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key",
                                "username"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "username": {
                                                        "description": "The username for this user",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "^[A-Za-z0-9\\.\\_\\-\\@]+",
                                                        "type": "string"
                                                    },
                                                    "email_password": {
                                                        "description": "The password for this user when sending email.",
                                                        "type": "string"
                                                    },
                                                    "sending_allowed": {
                                                        "description": "Whether or not this user can send email.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit": {
                                                        "description": "Whether this user has a custom rate limit.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit_value": {
                                                        "description": "If custom_ratelimit is true, how many emails this user can send in the period specified in custom_ratelimit_period.",
                                                        "type": "integer"
                                                    },
                                                    "custom_ratelimit_period": {
                                                        "description": "If custom_ratelimit is true, the period in minutes in which the user will be limited to the number of emails specified in custom_ratelimit_value.",
                                                        "type": "string"
                                                    },
                                                    "comments": {
                                                        "description": "Any comments or additional information about this user.",
                                                        "type": "string"
                                                    },
                                                    "feedback_enabled": {
                                                        "description": "Are custom feedback inserts specified",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "feedback_domain": {
                                                        "description": "The domain to insert into the custom feedback links",
                                                        "default": "default",
                                                        "type": "string"
                                                    },
                                                    "feedback_html": {
                                                        "description": "HTML Content to use in text/html email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "feedback_text": {
                                                        "description": "Text Content to use in text/plain email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "archive_enabled": {
                                                        "description": "Is archiving enabled for this user",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "audit_email": {
                                                        "description": "BCC Address for this user key",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "username",
                                                    "sending_allowed",
                                                    "custom_ratelimit"
                                                ],
                                                "type": "object"
                                            },
                                            "description": "A list of users that were returned by the last action",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "results"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "results": [
                                        {
                                            "comments": "Comment explaining why we edited this user",
                                            "email_password": "H#8dkK2djs",
                                            "custom_ratelimit_period": "1 day",
                                            "username": "smtpuser@example.com",
                                            "custom_ratelimit": true,
                                            "custom_ratelimit_value": 100
                                        }
                                    ]
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        },
        "/users/smtp/remove": {
            "post": {
                "description": "<div class=\"smtp2go-doc-container\">\n\n\t<h4>Remove an SMTP user</h4>\n\t<p>Rate limited to 30 request(s) per 60 seconds</p>\n\n\t<h5>Request Example</h5>\n\t<pre>{\n    \"api_key\": \"api-554407F347FB4689A35C07377E61B7D5\",\n    \"username\": \"smtpuser@example.com\"\n}</pre>\n\t\n\t<h5>Response Example</h5>\n\t<pre>{\n\t\"request_id\": \"aa253464-0bd0-467a-b24b-6159dcd7be60\",\n\t\"data\": \n\t{\n\t\t\"results\": [\n\t\t\t{\n\t\t\t\t\"username\": \"smtpuser@example.com\",\n\t\t\t\t\"email_password\": \"H#8dkK2djs\",\n\t\t\t\t\"custom_ratelimit\": true,\n\t\t\t\t\"custom_ratelimit_value\": 100,\n\t\t\t\t\"custom_ratelimit_period\": \"1 day\",\n\t\t    \t\"comments\": \"Comment explaining why we edited this user\"\n\t\t    }\n\t\t]\n\t}\n}</pre>\n\n</div>",
                "tags": [
                    "SMTP Users"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "x-examples": {
                            "application/json": {
                                "username": "smtpuser@example.com",
                                "api_key": "api-554407F347FB4689A35C07377E61B7D5"
                            }
                        },
                        "in": "body",
                        "description": "",
                        "schema": {
                            "additionalProperties": false,
                            "properties": {
                                "api_key": {
                                    "description": "A full API Key from the API Keys admin console.",
                                    "pattern": "^api-[A-Za-z0-9]{32}$",
                                    "type": "string"
                                },
                                "username": {
                                    "description": "The username for this user",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "api_key",
                                "username"
                            ],
                            "type": "object"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "An error occurred",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "You do not have permission to access this API endpoint",
                                    "error_code": "E_ApiResponseCodes.ENDPOINT_PERMISSION_DENIED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    },
                    "200": {
                        "description": "The request succeeded",
                        "schema": {
                            "properties": {
                                "data": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "username": {
                                                        "description": "The username for this user",
                                                        "maxLength": 100,
                                                        "minLength": 1,
                                                        "pattern": "^[A-Za-z0-9\\.\\_\\-\\@]+",
                                                        "type": "string"
                                                    },
                                                    "email_password": {
                                                        "description": "The password for this user when sending email.",
                                                        "type": "string"
                                                    },
                                                    "sending_allowed": {
                                                        "description": "Whether or not this user can send email.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit": {
                                                        "description": "Whether this user has a custom rate limit.",
                                                        "type": "boolean"
                                                    },
                                                    "custom_ratelimit_value": {
                                                        "description": "If custom_ratelimit is true, how many emails this user can send in the period specified in custom_ratelimit_period.",
                                                        "type": "integer"
                                                    },
                                                    "custom_ratelimit_period": {
                                                        "description": "If custom_ratelimit is true, the period in minutes in which the user will be limited to the number of emails specified in custom_ratelimit_value.",
                                                        "type": "string"
                                                    },
                                                    "comments": {
                                                        "description": "Any comments or additional information about this user.",
                                                        "type": "string"
                                                    },
                                                    "feedback_enabled": {
                                                        "description": "Are custom feedback inserts specified",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "feedback_domain": {
                                                        "description": "The domain to insert into the custom feedback links",
                                                        "default": "default",
                                                        "type": "string"
                                                    },
                                                    "feedback_html": {
                                                        "description": "HTML Content to use in text/html email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "feedback_text": {
                                                        "description": "Text Content to use in text/plain email body",
                                                        "default": "",
                                                        "type": "string"
                                                    },
                                                    "archive_enabled": {
                                                        "description": "Is archiving enabled for this user",
                                                        "default": false,
                                                        "type": "boolean"
                                                    },
                                                    "audit_email": {
                                                        "description": "BCC Address for this user key",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "username",
                                                    "sending_allowed",
                                                    "custom_ratelimit"
                                                ],
                                                "type": "object"
                                            },
                                            "description": "A list of users that were returned by the last action",
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "results"
                                    ],
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "results": [
                                        {
                                            "comments": "Comment explaining why we edited this user",
                                            "email_password": "H#8dkK2djs",
                                            "custom_ratelimit_period": "1 day",
                                            "username": "smtpuser@example.com",
                                            "custom_ratelimit": true,
                                            "custom_ratelimit_value": 100
                                        }
                                    ]
                                },
                                "request_id": "aa253464-0bd0-467a-b24b-6159dcd7be60"
                            }
                        }
                    },
                    "429": {
                        "description": "Too many calls were made to this endpoint within the specified time frame",
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "error": {
                                            "description": "An error string",
                                            "type": "string"
                                        },
                                        "error_code": {
                                            "description": "An API Error Code string",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "request_id": {
                                    "description": "A Unique ID for this request",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "headers": {
                            "X-Rate-Limit-Limit": {
                                "description": "The number of allowed requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Remaining": {
                                "description": "The number of remaining requests in the current period",
                                "type": "integer"
                            },
                            "X-Rate-Limit-Reset": {
                                "description": "The number of seconds left in the current period",
                                "type": "integer"
                            }
                        },
                        "examples": {
                            "application/json": {
                                "data": {
                                    "error": "This endpoint is rate limited to 1 request every 60 seconds",
                                    "error_code": "E_ApiResponseCodes.REQ_LIMIT_EXCEEDED"
                                },
                                "request_id": "22e5acba-43bf-11e6-ae42-408d5cce2644"
                            }
                        }
                    }
                }
            }
        }
    },
    "schemes": [
        "https"
    ]
}
